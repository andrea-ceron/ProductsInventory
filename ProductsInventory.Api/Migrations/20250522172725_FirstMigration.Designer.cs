// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProductsInventory.Repository;

#nullable disable

namespace ProductsInventory.Api.Migrations
{
    [DbContext(typeof(ProductsInventoryDbContext))]
    [Migration("20250522172725_FirstMigration")]
    partial class FirstMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ProductsInventory.Repository.Models.EndProduct", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InStorage")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProductionProcessId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductionProcessId")
                        .IsUnique();

                    b.ToTable("EndProducts");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.ProductionOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("EndProduction")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductionProcessId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("ShipmentId")
                        .HasColumnType("int");

                    b.Property<DateTime>("StartProduction")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("ProductionProcessId");

                    b.HasIndex("ShipmentId");

                    b.ToTable("ProductionOrders");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.ProductionProcess", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.HasKey("Id");

                    b.ToTable("ProductionProcesses");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.ProductionProcessRawMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ProductionProcessId")
                        .HasColumnType("int");

                    b.Property<double>("QuantityUsed")
                        .HasColumnType("float");

                    b.Property<int>("RawMaterialId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductionProcessId");

                    b.HasIndex("RawMaterialId");

                    b.ToTable("ProductionProcessRawMaterials");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.RawMaterial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("InStorage")
                        .HasColumnType("int");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("RawMaterials");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.Shipment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("DestinationAddress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("ShipmentDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Shipments");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.EndProduct", b =>
                {
                    b.HasOne("ProductsInventory.Repository.Models.ProductionProcess", "ProductionProcess")
                        .WithOne("EndProduct")
                        .HasForeignKey("ProductsInventory.Repository.Models.EndProduct", "ProductionProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionProcess");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.ProductionOrder", b =>
                {
                    b.HasOne("ProductsInventory.Repository.Models.ProductionProcess", "ProductionProcess")
                        .WithMany("ProductionOrder")
                        .HasForeignKey("ProductionProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductsInventory.Repository.Models.Shipment", "Shipment")
                        .WithMany("Items")
                        .HasForeignKey("ShipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionProcess");

                    b.Navigation("Shipment");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.ProductionProcessRawMaterial", b =>
                {
                    b.HasOne("ProductsInventory.Repository.Models.ProductionProcess", "ProductionProcess")
                        .WithMany("ProductionProcessRawMaterial")
                        .HasForeignKey("ProductionProcessId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("ProductsInventory.Repository.Models.RawMaterial", "RawMaterial")
                        .WithMany("ProductionProcessRawMaterial")
                        .HasForeignKey("RawMaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProductionProcess");

                    b.Navigation("RawMaterial");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.ProductionProcess", b =>
                {
                    b.Navigation("EndProduct")
                        .IsRequired();

                    b.Navigation("ProductionOrder");

                    b.Navigation("ProductionProcessRawMaterial");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.RawMaterial", b =>
                {
                    b.Navigation("ProductionProcessRawMaterial");
                });

            modelBuilder.Entity("ProductsInventory.Repository.Models.Shipment", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
